Now that we have geometry and material data loaded, we can attempt to render a graphical representation of this data onto the image plane (i.e. the SDL drawing window). Projecting a vertex onto the image plane is based around the notion of similar triangles. See the slides, narrated audio and animation above for an explanation of this.

Clearly, calculating the projected position of a vertex on the image plane is going to involve the _(x,y,z)_ position of the vertex in 3D space, as well as the distance between the camera and image plane. There is an additional complexity in that the origin of the Cornell Box model is in the centre of the room, whereas the origin of the image plane is at the top left of the drawing window.

When rendering a scene on the 2D image plane, what we really want is for the centre of the room to appear in the _centre_ of the image plane. To achieve this, we just need to shift the 2D position of each vertex before we draw it onto the screen. If we shift everything along by half the width of the image plane and down by half the height of the image plane, the render will appear centred in the middle of the plane. If we didn't do this, the centre of the room would appear in the top left corner of the drawing window !

The consequence of all of the above discussion is that, for a particular vertex _i_ that has a position in 3D space of _(x<sup>i</sup>, y<sup>i</sup>, z<sup>i</sup>)_ we can calculate its position on the image plane _(u<sup>i</sup>, v<sup>i</sup>)_ using the two formulae provide below (where _f_ is the distance from the camera to the image plane - often referred to as the "focal length"). 

Use these formulae to project each 3D vertex from the Cornell Box model down onto the 2D image plane. If you draw a single white pixel at each projected point, you should end up with a point-cloud render that looks like the image shown below the formulae. Don't forget to read the "Hints & Tips" section below before attempting this !